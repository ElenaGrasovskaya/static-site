@use 'common';
@use 'components';
@use 'partials/grid';
@use 'partials/color';
@use 'partials/mixin';
@use 'partials/breakpoint';
@use 'partials/placeholder';

main {
  margin-right: auto;
  margin-left: auto;
  @include grid.dimension($property: max-width, $from: 5, $to: 53, $max: 90vw);
}

.advantage-section {
  display: grid;
  @include grid.dimension($property: max-width, $from: 5, $to: 53, $max: 90vw);
  @include grid.dimension($property: margin-bottom, $units: 7);

  @include breakpoint.from(small) {
    grid: auto/ repeat(2, 1fr);
  }

  @include breakpoint.from(large) {
    grid:
      auto / grid.size($from: 5, $to: 21) grid.size($from: 22, $to: 38)
      grid.size($from: 39, $to: 53);
    gap: 0;
  }

  .advantage-section-item {
    display: flex;
    flex-direction: column;

    p {
      text-align: center;
    }

    @include grid.dimension($property: margin-bottom, $units: 2);

    @include breakpoint.from(small) {
      &:last-of-type {
        display: none;
      }
    }

    @include breakpoint.from(large) {
      &:last-of-type {
        display: flex;
      }

      @include grid.dimension($property: width, $units: 14);
    }
    svg {
      // Safari can't display SVG without declaring
      // its size explicitly.
      min-width: 100%;
      @include grid.dimension($property: height, $units: 3);
      opacity: 50%;
    }
  }
}

.aim-section {
  display: grid;
  @include grid.dimension($property: max-width, $from: 5, $to: 53, $max: 90vw);
  @include grid.dimension($property: margin-bottom, $units: 7);
  @include grid.dimension($property: gap, $units: 4);

  @include breakpoint.from(small) {
    grid: auto;
  }
  @include breakpoint.from(large) {
    grid: auto/grid.size($from: 5, $to: 21) auto;
  }
}

.aim-section-item {
  p {
    margin: 0;
  }
  span {
    text-align: justify;
    text-justify: inter-word;
  }
}

.dribbble-link-animated
{
  position: relative;
  @include grid.dimension($property: left, $units: 45);
  @include grid.dimension($property: top, $units: -12);
  display: none;

  @include breakpoint.from(small) {
    display: none;
  }
  @include breakpoint.from(large) {
    display: inline-block;
  }
  
}

.dribbble-logo-animated-back
{
  position: relative;
  @include grid.dimension($property: width, $units: 6);
  @include grid.dimension($property: height, $units: 6);
  background-image: url('svg/circled-text.svg');
  background-position: center;
  background-size: cover; 
}
.dribbble-logo-animated-front
{
  position: absolute;
  @include grid.dimension($property: top, $units: 2);
  @include grid.dimension($property: left, $units: 2);
  @include grid.dimension($property: width, $units: 2);
  @include grid.dimension($property: height, $units: 2);
  transition-duration: 0.8s;
  transition-property: transform;
  :hover
  {
    transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
    filter: invert(52%) sepia(26%) saturate(5887%) hue-rotate(303deg) brightness(81%);
  }

}
.recent-works-container
{
  position: relative;
  left: -50vw;
  top: -2vw;
  display: grid;
  grid: auto / 1fr 1fr 1fr;
  @include grid.dimension($property: gap, $units: 1);
 
}

.recent-works-block
{
  display: grid;
  @include grid.dimension($property: width, $units: 40);
  @include grid.dimension($property: height, $units: 15);
  @include grid.dimension($property: gap, $units: 1);
  grid: repeat(3, 1fr)/repeat(10, 1fr);

}
.recent-works-item
{
  overflow: hidden;
  object-fit: cover ;
  &:nth-child(1)
  {
    grid-column-start: 1;
    grid-column-end: 7;
    grid-row-start: 1;
    grid-row-end: 4;
  }
  &:nth-child(2)
  {
    grid-column-start: 7;
    grid-column-end: 11;
    grid-row-start: 1;
    grid-row-end: 3;
  }
  &:nth-child(3)
  {
    grid-column-start: 7;
    grid-column-end: 9;
    grid-row-start: 3;
    grid-row-end: 4;
  }
  &:nth-child(4)
  {
    grid-column-start: 9;
    grid-column-end: 11;
    grid-row-start: 3;
    grid-row-end: 4;
  }
}


