@use '../../partials/grid';
@use '../../partials/color';
@use '../../partials/breakpoint';

$_icons: (
  projects: 7,
  services: 8,
  blog: 7,
  contacts: 6,
);

@mixin links-with-icons {
  @each $name, $size in $_icons {
    &[data-icon='#{$name}'] {
      background-image: url('svg/#{$name}.svg');

      @include grid.dimension($property: background-size, $units: $size);
    }
  }
}

.menu {
  flex: 1;
  display: none;
  margin-left: auto;
  margin-right: auto;

  @include grid.dimension($property: padding, $units: 2);
  @include grid.dimension($property: width, $units: 32);

  @include breakpoint.from(medium) {
    width: initial;
    margin-left: initial;
    margin-right: initial;
  }

  a {
    color: color.$white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: color.$medium-blue;
    background-position: center;
    background-repeat: no-repeat;
    text-transform: uppercase;

    @include links-with-icons;
    @include grid.dimension($property: width, $from: 22, $to: 35);
    @include grid.dimension($property: height, $from: 22, $to: 35);
    @include grid.dimension($property: font-size, $units: 0.6, $min: 10px);
    @include grid.dimension($property: letter-spacing, $units: 0.4, $min: 6px);

    &:nth-of-type(2n) {
      align-self: flex-end;
    }

    &:not(:nth-of-type(1)) {
      @include grid.dimension($property: margin-top, $units: -4);

      @include breakpoint.from(medium) {
        @include grid.units($property: margin-top, $count: -8);
      }
    }

    @include breakpoint.from(medium) {
      &:nth-of-type(1) {
        @include grid.dimension($property: margin-left, $from: 1, $to: 21);
      }

      &:nth-of-type(2) {
        @include grid.dimension($property: margin-right, $from: 57, $to: 64);
      }

      &:nth-of-type(3) {
        @include grid.dimension($property: margin-left, $from: 1, $to: 5);
      }

      &:nth-of-type(4) {
        @include grid.dimension($property: margin-right, $from: 42, $to: 64);
      }
    }

    @include breakpoint.from(xxl) {
      @include grid.units($property: width, $count: 13);
      @include grid.units($property: height, $count: 13);
    }

    span {
      flex: 1;

      &:first-child {
        @include grid.dimension($property: margin-right, $units: 1);
      }
    }
  }
}
