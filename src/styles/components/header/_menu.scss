@use '../../partials/grid';
@use '../../partials/mixin';
@use '../../partials/color';
@use '../../partials/breakpoint';
@use '../../partials/placeholder';

@keyframes appearance {
  from {
    opacity: 0;
    transform: translateY(10%);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

$_icons: (
  projects: 7,
  services: 8,
  blog: 7,
  contacts: 6,
);

@mixin links-with-icons {
  @each $name, $size in $_icons {
    &[data-icon='#{$name}'] {
      .background-image {
        background: url('svg/#{$name}.svg') no-repeat center transparent;

        @include grid.dimension($property: background-size, $units: $size);
      }

      &::before {
        --menu-link-scale-ratio: 0.6;

        background-color: color.$medium-blue;
        transform: scale(var(--menu-link-scale-ratio)) rotate(20deg);
      }

      &.shrink::before {
        --menu-link-scale-ratio: 0.3;
      }

      &.semi-shrink::before {
        --menu-link-scale-ratio: 0.45;
      }

      &::after {
        opacity: 0;
        transform: scale(0.6) rotate(20deg);
      }

      &.active,
      &:hover {
        .background-image {
          opacity: 1;
        }

        &::before {
          transform: scale(1) rotate(0);
        }

        &::after {
          opacity: 1;
          transform: scale(1) rotate(-20deg);
        }
      }
    }
  }
}

.menu {
  flex: 1;
  display: none;

  @include grid.dimension($property: width, $units: 32);

  @extend %center-block;
  @include grid.dimension($property: padding-right, $units: 2);
  @include grid.dimension($property: padding-left, $units: 1);

  @include breakpoint.from(medium) {
    width: initial;
    margin-left: initial;
    margin-right: initial;
  }

  .menu-link {
    position: relative;
    color: color.$white;
    display: flex;
    opacity: 0;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    animation: appearance 0.5s forwards;

    @for $i from 1 through 4 {
      &:nth-of-type(#{$i}) {
        animation-delay: #{$i / 10}s;
      }
    }

    @include links-with-icons;
    @include grid.dimension($property: width, $from: 22, $to: 35);
    @include grid.dimension($property: height, $from: 22, $to: 35);
    @include grid.dimension($property: font-size, $units: 0.6, $min: 10px);
    @include grid.dimension($property: letter-spacing, $units: 0.4, $min: 6px);

    &:nth-of-type(2n) {
      align-self: flex-end;
    }

    &:not(:nth-of-type(1)) {
      @include grid.dimension($property: margin-top, $units: -4);

      @include breakpoint.from(medium) {
        @include grid.units($property: margin-top, $count: -8);
      }
    }

    &:nth-of-type(4) {
      @include grid.dimension($property: margin-right, $units: 4);
    }

    @include breakpoint.from(medium) {
      &:nth-of-type(1) {
        @include grid.dimension($property: margin-left, $from: 1, $to: 21);
      }

      &:nth-of-type(2) {
        @include grid.dimension($property: margin-right, $from: 57, $to: 64);
      }

      &:nth-of-type(3) {
        @include grid.dimension($property: margin-left, $from: 1, $to: 5);
      }

      &:nth-of-type(4) {
        @include grid.units($property: margin-right, $from: 42, $to: 64);
      }
    }

    &.active {
      // Disable click event on anchor tag because we are
      // already on the needed page.
      pointer-events: none;
    }

    .background-image {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      opacity: 0;

      @include mixin.smooth(
        (
          delay: 0.1s,
          duration: 0.5s,
        )
      );
    }

    &::before {
      content: '';
      border-radius: 50%;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: -1;

      @include mixin.smooth(
        (
          duration: 0.4s,
        )
      );
    }

    &::after {
      content: '';
      background-image: url('svg/stars.svg');
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;

      @include mixin.smooth(
        (
          duration: 0.5s,
          timing-function: ease-out,
        )
      );
    }

    @include breakpoint.from(xxl) {
      @include grid.units($property: width, $count: 13);
      @include grid.units($property: height, $count: 13);
    }

    span {
      width: 50%;
    }
  }
}
