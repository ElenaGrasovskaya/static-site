@use 'function';
@use 'breakpoint';

:root {
  --min-unit-value: 10px;
  --max-unit-value: 25px;
  // Difference between max and min unit's possible value.
  --unit-difference: 15;

  --current-viewport-width: min(#{breakpoint.get(max)}, 100vw);
  --viewport-difference: #{function.strip-unit(
      breakpoint.get(max) - breakpoint.get(small)
    )};
  --current-viewport-difference: calc(
    var(--current-viewport-width) - #{breakpoint.get(small)}
  );

  // Linear interpolation between allowed unit values.
  --fluid-unit-value: calc(
    var(--min-unit-value) + var(--unit-difference) *
      var(--current-viewport-difference) / var(--viewport-difference)
  );
  // unit is value that resizes freely between minimum
  // and maximum acceptible value.
  --unit: max(
    var(--min-unit-value),
    min(var(--max-unit-value), var(--fluid-unit-value))
  );
}

@mixin container {
  max-width: breakpoint.get(max);
  margin-right: auto;
  margin-left: auto;
}

@mixin dimension($count: 1, $property: width, $from: 1, $to: null) {
  --#{$property}-units-count: #{if($to != null, $to - $from + 1, $count)};
  #{$property}: calc(var(--#{$property}-units-count) * var(--unit));
}

@mixin units($property, $count) {
  --#{$property}-units-count: #{$count};
}
