@use 'sass:map';

// [Why such values?](https://flaviocopes.com/css-breakpoints/)
$_breakpoints: (
  small: 640px,
  medium: 768px,
  large: 1024px,
  xl: 1280px,
  xxl: 1536px,
);

/// Wrap content into media query starting from
/// $type keyword. If type is not recognizable,
/// then content is meant for `0px` and up.
///
/// @param {"small" | "medium" | "large" | "xl" | "xxl"} $type - name of breakpoint.
@mixin from($type) {
  @if map.has-key($_breakpoints, $type) {
    @media (min-width: map.get($_breakpoints, $type)) {
      @content;
    }
  } @else {
    @content;
  }
}

/// Wrap content into media query starting from
/// `0px` to $type keyword. If type is not recognizable,
/// then content is meant for `0px` and up.
///
/// @param {"small" | "medium" | "large" | "xl" | "xxl"} $type - name of breakpoint.
@mixin to($type) {
  @if map.has-key($_breakpoints, $type) {
    // max-width is inclusive property, so we need to exlude 1px from it,
    // in order to avoid interlacing of styles.
    @media (max-width: #{map.get($_breakpoints, $type) - 1}) {
      @content;
    }
  } @else {
    @content;
  }
}
