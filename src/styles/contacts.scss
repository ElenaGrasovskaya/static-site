@use 'common';
@use 'components';
@use 'partials/grid';
@use 'partials/color';
@use 'partials/mixin';
@use 'partials/breakpoint';
@use 'partials/placeholder';

main {
  margin-right: auto;
  margin-left: auto;
  @include grid.dimension($property: max-width, $from: 12, $to: 53, $max: 90vw);
}

.info-section {
  @include grid.dimension($property: margin-bottom, $units: 5);

  .left-column {
    @include grid.dimension($property: width, $from: 12, $to: 33);
    @include grid.dimension($property: margin-bottom, $units: 3);

    p {
      margin: 0;
    }
  }

  .right-column {
    margin: 0;
    letter-spacing: 0.5px;
    font-weight: 300;
  }

  @include breakpoint.from(medium) {
    display: flex;

    .left-column {
      margin-bottom: 0;
    }

    .right-column {
      @include grid.dimension($property: width, $from: 34, $to: 53);
    }
  }
}

.contact-form {
  @include grid.dimension($property: margin-bottom, $units: 8);

  input[type='checkbox'] {
    + label {
      display: inline-block;
      border-color: color.$medium-blue;
      cursor: pointer;

      @extend %outlined;
      @include mixin.smooth(
        (
          duration: 0.2s,
        )
      );
      @include grid.dimension($property: padding, $units: 1);

      &:not(:last-child) {
        @include grid.dimension($property: margin-right, $units: 1);
        @include grid.dimension($property: margin-bottom, $units: 1);
      }
    }

    &:checked + label {
      color: color.$medium-blue;
      background-color: color.$white;
    }
  }

  fieldset {
    &:not(:last-of-type) {
      @include grid.dimension($property: margin-bottom, $units: 3);
    }

    &:first-of-type {
      @include breakpoint.from(medium) {
        .input-wrapper {
          &:not(:last-of-type) {
            display: inline-block;
          }

          &:nth-of-type(1) {
            @include grid.dimension($property: width, $from: 12, $to: 31);
            @include grid.dimension($property: margin-right, $units: 2);
          }

          &:nth-of-type(2) {
            @include grid.dimension($property: width, $from: 34, $to: 53);
          }
        }
      }
    }

    &:last-of-type {
      @include grid.dimension($property: margin-bottom, $units: 5);
    }

    legend {
      text-transform: uppercase;

      @include grid.dimension($property: letter-spacing, $units: 0.5);
      @include grid.dimension($property: font-size, $units: 0.7, $min: 12px);
      @include grid.dimension($property: margin-bottom, $units: 1);
    }

    .input-wrapper:not(:last-child) {
      @include grid.dimension($property: margin-bottom, $units: 2);
    }
  }

  .input-wrapper {
    position: relative;
    font-weight: 300;

    @extend %outlined;

    &.message-wrapper {
      display: flex;
      flex-direction: column;
    }

    > label {
      transform-origin: left top;
      position: absolute;
      color: color.$roman-silver;
      letter-spacing: 0.5px;

      @include grid.dimension($property: top, $units: 0.6);
      @include grid.dimension($property: left, $units: 1);
      @include grid.dimension($property: transform, $units: 1) using
        ($value, $property) {
        #{$property}: translate(#{$value}, calc(#{$value} / 2));
      }
      @include mixin.smooth();
    }

    textarea,
    input:not([type='submit'], [type='file']) {
      background: transparent;
      width: 100%;
      outline: none;
      border: 2px solid transparent;

      @extend %inherit-font;
      @include grid.dimension($property: padding-top, $units: 1.6);
      @include grid.dimension($property: padding-bottom, $units: 0.4);
      @include grid.dimension($property: padding-right, $units: 1);
      @include grid.dimension($property: padding-left, $units: 1);
      @include mixin.smooth();

      &:not(:placeholder-shown):invalid {
        border-color: color.$crimson;

        + label {
          color: color.$crimson;
        }
      }

      &:focus,
      &:not(:placeholder-shown) {
        border-color: color.$medium-blue;
        background-color: color.$white;

        + label {
          @include grid.dimension($property: transform, $units: 0);
          @include grid.dimension($property: font-size, $units: 0.7, $min: 14px);
        }

        ~ .message-section-footer {
          background-color: color.$white;
          border-color: color.$medium-blue;
        }
      }
    }

    textarea {
      resize: none;
      border-bottom: none;

      @include grid.dimension($property: min-height, $units: 11);

      ~ .message-section-footer {
        border-left: 2px solid transparent;
        border-right: 2px solid transparent;
        border-bottom: 2px solid transparent;
      }
    }
  }

  .message-section {
    &-footer {
      @include grid.dimension($property: padding-bottom, $units: 1);
      @include grid.dimension($property: padding-left, $units: 2);
      @include mixin.smooth();

      .attach-button {
        display: none;

        @include breakpoint.from(medium) {
          background: color.$space-cadet;
          border-radius: 100%;
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;

          @include mixin.smooth();
          @include grid.dimension($property: width, $units: 2, $min: 35px);
          @include grid.dimension($property: height, $units: 2, $min: 35px);

          &:hover {
            background-color: color.$medium-blue;
            transform: scale(1.1);
          }
        }

        svg {
          height: 50%;
        }
      }
    }
  }
}

.send-message-button {
  margin: 0 auto;

  @include mixin.smooth();
  @include grid.dimension($property: width, $units: 9);
  @include grid.dimension($property: height, $units: 9);

  &:hover {
    transform: scale(1.25);
    @include grid.dimension($property: box-shadow, $units: 2) using
      ($value, $property) {
      #{$property}: 0 0 $value 0 color.$medium-blue;
    }
  }
}
